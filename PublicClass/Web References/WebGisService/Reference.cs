//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.17929 版自动生成。
// 
#pragma warning disable 1591

namespace PublicClass.WebGisService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebgisServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebgisService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CacheGeoCodeAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatCatelliteTileOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatCwtTileOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMapImgFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatGoogleTileOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportTrackLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlarmStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlarmStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMapNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCityDistrictInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistrictInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistrictInfoByXYOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFullDistrictInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegionNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoadNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoadNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoadRankOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWeatherIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitialStaticCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsInRegionOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsInRegionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAllLayerByAttrOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAllLayerByLngLatAttrOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAllLayerByPointOperationCompleted;
        
        private System.Threading.SendOrPostCallback RouteAnalyOperationCompleted;
        
        private System.Threading.SendOrPostCallback T_CacheInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback T_ExportQueryIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback T_GetQueryCountOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebgisService() {
            this.Url = global::PublicClass.Properties.Settings.Default.PublicClass_WebGISservice_WebgisService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CacheGeoCodeAddressCompletedEventHandler CacheGeoCodeAddressCompleted;
        
        /// <remarks/>
        public event CreatCatelliteTileCompletedEventHandler CreatCatelliteTileCompleted;
        
        /// <remarks/>
        public event CreatCwtTileCompletedEventHandler CreatCwtTileCompleted;
        
        /// <remarks/>
        public event CreateMapImgFileCompletedEventHandler CreateMapImgFileCompleted;
        
        /// <remarks/>
        public event CreatGoogleTileCompletedEventHandler CreatGoogleTileCompleted;
        
        /// <remarks/>
        public event ExportTrackLineCompletedEventHandler ExportTrackLineCompleted;
        
        /// <remarks/>
        public event GetAlarmStateCompletedEventHandler GetAlarmStateCompleted;
        
        /// <remarks/>
        public event GetAlarmStatusCompletedEventHandler GetAlarmStatusCompleted;
        
        /// <remarks/>
        public event GetAllMapNamesCompletedEventHandler GetAllMapNamesCompleted;
        
        /// <remarks/>
        public event GetCityDistrictInfoCompletedEventHandler GetCityDistrictInfoCompleted;
        
        /// <remarks/>
        public event GetDistrictInfoCompletedEventHandler GetDistrictInfoCompleted;
        
        /// <remarks/>
        public event GetDistrictInfoByXYCompletedEventHandler GetDistrictInfoByXYCompleted;
        
        /// <remarks/>
        public event GetFullDistrictInfoCompletedEventHandler GetFullDistrictInfoCompleted;
        
        /// <remarks/>
        public event GetRegionNamesCompletedEventHandler GetRegionNamesCompleted;
        
        /// <remarks/>
        public event GetRoadNameCompletedEventHandler GetRoadNameCompleted;
        
        /// <remarks/>
        public event GetRoadNamesCompletedEventHandler GetRoadNamesCompleted;
        
        /// <remarks/>
        public event GetRoadRankCompletedEventHandler GetRoadRankCompleted;
        
        /// <remarks/>
        public event GetWeatherIdCompletedEventHandler GetWeatherIdCompleted;
        
        /// <remarks/>
        public event InitialStaticCacheCompletedEventHandler InitialStaticCacheCompleted;
        
        /// <remarks/>
        public event IsInRegionCompletedEventHandler IsInRegionCompleted;
        
        /// <remarks/>
        public event IsInRegionsCompletedEventHandler IsInRegionsCompleted;
        
        /// <remarks/>
        public event QueryAllLayerByAttrCompletedEventHandler QueryAllLayerByAttrCompleted;
        
        /// <remarks/>
        public event QueryAllLayerByLngLatAttrCompletedEventHandler QueryAllLayerByLngLatAttrCompleted;
        
        /// <remarks/>
        public event QueryAllLayerByPointCompletedEventHandler QueryAllLayerByPointCompleted;
        
        /// <remarks/>
        public event RouteAnalyCompletedEventHandler RouteAnalyCompleted;
        
        /// <remarks/>
        public event T_CacheInfoCompletedEventHandler T_CacheInfoCompleted;
        
        /// <remarks/>
        public event T_ExportQueryIPCompletedEventHandler T_ExportQueryIPCompleted;
        
        /// <remarks/>
        public event T_GetQueryCountCompletedEventHandler T_GetQueryCountCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CacheGeoCodeAddress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CacheGeoCodeAddress(string strlonlat, string cacheAddress) {
            this.Invoke("CacheGeoCodeAddress", new object[] {
                        strlonlat,
                        cacheAddress});
        }
        
        /// <remarks/>
        public void CacheGeoCodeAddressAsync(string strlonlat, string cacheAddress) {
            this.CacheGeoCodeAddressAsync(strlonlat, cacheAddress, null);
        }
        
        /// <remarks/>
        public void CacheGeoCodeAddressAsync(string strlonlat, string cacheAddress, object userState) {
            if ((this.CacheGeoCodeAddressOperationCompleted == null)) {
                this.CacheGeoCodeAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCacheGeoCodeAddressOperationCompleted);
            }
            this.InvokeAsync("CacheGeoCodeAddress", new object[] {
                        strlonlat,
                        cacheAddress}, this.CacheGeoCodeAddressOperationCompleted, userState);
        }
        
        private void OnCacheGeoCodeAddressOperationCompleted(object arg) {
            if ((this.CacheGeoCodeAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CacheGeoCodeAddressCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreatCatelliteTile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] CreatCatelliteTile(int width, int height, int zoom, double lon, double lat) {
            object[] results = this.Invoke("CreatCatelliteTile", new object[] {
                        width,
                        height,
                        zoom,
                        lon,
                        lat});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void CreatCatelliteTileAsync(int width, int height, int zoom, double lon, double lat) {
            this.CreatCatelliteTileAsync(width, height, zoom, lon, lat, null);
        }
        
        /// <remarks/>
        public void CreatCatelliteTileAsync(int width, int height, int zoom, double lon, double lat, object userState) {
            if ((this.CreatCatelliteTileOperationCompleted == null)) {
                this.CreatCatelliteTileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatCatelliteTileOperationCompleted);
            }
            this.InvokeAsync("CreatCatelliteTile", new object[] {
                        width,
                        height,
                        zoom,
                        lon,
                        lat}, this.CreatCatelliteTileOperationCompleted, userState);
        }
        
        private void OnCreatCatelliteTileOperationCompleted(object arg) {
            if ((this.CreatCatelliteTileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatCatelliteTileCompleted(this, new CreatCatelliteTileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreatCwtTile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] CreatCwtTile(int width, int height, int zoom, double lon, double lat) {
            object[] results = this.Invoke("CreatCwtTile", new object[] {
                        width,
                        height,
                        zoom,
                        lon,
                        lat});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void CreatCwtTileAsync(int width, int height, int zoom, double lon, double lat) {
            this.CreatCwtTileAsync(width, height, zoom, lon, lat, null);
        }
        
        /// <remarks/>
        public void CreatCwtTileAsync(int width, int height, int zoom, double lon, double lat, object userState) {
            if ((this.CreatCwtTileOperationCompleted == null)) {
                this.CreatCwtTileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatCwtTileOperationCompleted);
            }
            this.InvokeAsync("CreatCwtTile", new object[] {
                        width,
                        height,
                        zoom,
                        lon,
                        lat}, this.CreatCwtTileOperationCompleted, userState);
        }
        
        private void OnCreatCwtTileOperationCompleted(object arg) {
            if ((this.CreatCwtTileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatCwtTileCompleted(this, new CreatCwtTileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateMapImgFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] CreateMapImgFile(int width, int height, int zoom, double lon, double lat, string carnum) {
            object[] results = this.Invoke("CreateMapImgFile", new object[] {
                        width,
                        height,
                        zoom,
                        lon,
                        lat,
                        carnum});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void CreateMapImgFileAsync(int width, int height, int zoom, double lon, double lat, string carnum) {
            this.CreateMapImgFileAsync(width, height, zoom, lon, lat, carnum, null);
        }
        
        /// <remarks/>
        public void CreateMapImgFileAsync(int width, int height, int zoom, double lon, double lat, string carnum, object userState) {
            if ((this.CreateMapImgFileOperationCompleted == null)) {
                this.CreateMapImgFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMapImgFileOperationCompleted);
            }
            this.InvokeAsync("CreateMapImgFile", new object[] {
                        width,
                        height,
                        zoom,
                        lon,
                        lat,
                        carnum}, this.CreateMapImgFileOperationCompleted, userState);
        }
        
        private void OnCreateMapImgFileOperationCompleted(object arg) {
            if ((this.CreateMapImgFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMapImgFileCompleted(this, new CreateMapImgFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreatGoogleTile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] CreatGoogleTile(int width, int height, int zoom, double lon, double lat) {
            object[] results = this.Invoke("CreatGoogleTile", new object[] {
                        width,
                        height,
                        zoom,
                        lon,
                        lat});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void CreatGoogleTileAsync(int width, int height, int zoom, double lon, double lat) {
            this.CreatGoogleTileAsync(width, height, zoom, lon, lat, null);
        }
        
        /// <remarks/>
        public void CreatGoogleTileAsync(int width, int height, int zoom, double lon, double lat, object userState) {
            if ((this.CreatGoogleTileOperationCompleted == null)) {
                this.CreatGoogleTileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatGoogleTileOperationCompleted);
            }
            this.InvokeAsync("CreatGoogleTile", new object[] {
                        width,
                        height,
                        zoom,
                        lon,
                        lat}, this.CreatGoogleTileOperationCompleted, userState);
        }
        
        private void OnCreatGoogleTileOperationCompleted(object arg) {
            if ((this.CreatGoogleTileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatGoogleTileCompleted(this, new CreatGoogleTileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExportTrackLine", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ExportTrackLine(string[] lonlats, string shapeFileName) {
            object[] results = this.Invoke("ExportTrackLine", new object[] {
                        lonlats,
                        shapeFileName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ExportTrackLineAsync(string[] lonlats, string shapeFileName) {
            this.ExportTrackLineAsync(lonlats, shapeFileName, null);
        }
        
        /// <remarks/>
        public void ExportTrackLineAsync(string[] lonlats, string shapeFileName, object userState) {
            if ((this.ExportTrackLineOperationCompleted == null)) {
                this.ExportTrackLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportTrackLineOperationCompleted);
            }
            this.InvokeAsync("ExportTrackLine", new object[] {
                        lonlats,
                        shapeFileName}, this.ExportTrackLineOperationCompleted, userState);
        }
        
        private void OnExportTrackLineOperationCompleted(object arg) {
            if ((this.ExportTrackLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportTrackLineCompleted(this, new ExportTrackLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAlarmState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAlarmState(string strXml) {
            object[] results = this.Invoke("GetAlarmState", new object[] {
                        strXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAlarmStateAsync(string strXml) {
            this.GetAlarmStateAsync(strXml, null);
        }
        
        /// <remarks/>
        public void GetAlarmStateAsync(string strXml, object userState) {
            if ((this.GetAlarmStateOperationCompleted == null)) {
                this.GetAlarmStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlarmStateOperationCompleted);
            }
            this.InvokeAsync("GetAlarmState", new object[] {
                        strXml}, this.GetAlarmStateOperationCompleted, userState);
        }
        
        private void OnGetAlarmStateOperationCompleted(object arg) {
            if ((this.GetAlarmStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlarmStateCompleted(this, new GetAlarmStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAlarmStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAlarmStatus(string strInXml, out string strOutXml) {
            object[] results = this.Invoke("GetAlarmStatus", new object[] {
                        strInXml});
            strOutXml = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAlarmStatusAsync(string strInXml) {
            this.GetAlarmStatusAsync(strInXml, null);
        }
        
        /// <remarks/>
        public void GetAlarmStatusAsync(string strInXml, object userState) {
            if ((this.GetAlarmStatusOperationCompleted == null)) {
                this.GetAlarmStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlarmStatusOperationCompleted);
            }
            this.InvokeAsync("GetAlarmStatus", new object[] {
                        strInXml}, this.GetAlarmStatusOperationCompleted, userState);
        }
        
        private void OnGetAlarmStatusOperationCompleted(object arg) {
            if ((this.GetAlarmStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlarmStatusCompleted(this, new GetAlarmStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllMapNames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetAllMapNames() {
            object[] results = this.Invoke("GetAllMapNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMapNamesAsync() {
            this.GetAllMapNamesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllMapNamesAsync(object userState) {
            if ((this.GetAllMapNamesOperationCompleted == null)) {
                this.GetAllMapNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMapNamesOperationCompleted);
            }
            this.InvokeAsync("GetAllMapNames", new object[0], this.GetAllMapNamesOperationCompleted, userState);
        }
        
        private void OnGetAllMapNamesOperationCompleted(object arg) {
            if ((this.GetAllMapNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMapNamesCompleted(this, new GetAllMapNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCityDistrictInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetCityDistrictInfo(string[] idlonlats) {
            object[] results = this.Invoke("GetCityDistrictInfo", new object[] {
                        idlonlats});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCityDistrictInfoAsync(string[] idlonlats) {
            this.GetCityDistrictInfoAsync(idlonlats, null);
        }
        
        /// <remarks/>
        public void GetCityDistrictInfoAsync(string[] idlonlats, object userState) {
            if ((this.GetCityDistrictInfoOperationCompleted == null)) {
                this.GetCityDistrictInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCityDistrictInfoOperationCompleted);
            }
            this.InvokeAsync("GetCityDistrictInfo", new object[] {
                        idlonlats}, this.GetCityDistrictInfoOperationCompleted, userState);
        }
        
        private void OnGetCityDistrictInfoOperationCompleted(object arg) {
            if ((this.GetCityDistrictInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCityDistrictInfoCompleted(this, new GetCityDistrictInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistrictInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetDistrictInfo(string[] idlonlats) {
            object[] results = this.Invoke("GetDistrictInfo", new object[] {
                        idlonlats});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDistrictInfoAsync(string[] idlonlats) {
            this.GetDistrictInfoAsync(idlonlats, null);
        }
        
        /// <remarks/>
        public void GetDistrictInfoAsync(string[] idlonlats, object userState) {
            if ((this.GetDistrictInfoOperationCompleted == null)) {
                this.GetDistrictInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistrictInfoOperationCompleted);
            }
            this.InvokeAsync("GetDistrictInfo", new object[] {
                        idlonlats}, this.GetDistrictInfoOperationCompleted, userState);
        }
        
        private void OnGetDistrictInfoOperationCompleted(object arg) {
            if ((this.GetDistrictInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistrictInfoCompleted(this, new GetDistrictInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistrictInfoByXY", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDistrictInfoByXY(double x, double y) {
            object[] results = this.Invoke("GetDistrictInfoByXY", new object[] {
                        x,
                        y});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDistrictInfoByXYAsync(double x, double y) {
            this.GetDistrictInfoByXYAsync(x, y, null);
        }
        
        /// <remarks/>
        public void GetDistrictInfoByXYAsync(double x, double y, object userState) {
            if ((this.GetDistrictInfoByXYOperationCompleted == null)) {
                this.GetDistrictInfoByXYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistrictInfoByXYOperationCompleted);
            }
            this.InvokeAsync("GetDistrictInfoByXY", new object[] {
                        x,
                        y}, this.GetDistrictInfoByXYOperationCompleted, userState);
        }
        
        private void OnGetDistrictInfoByXYOperationCompleted(object arg) {
            if ((this.GetDistrictInfoByXYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistrictInfoByXYCompleted(this, new GetDistrictInfoByXYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFullDistrictInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetFullDistrictInfo(string[] idlonlats) {
            object[] results = this.Invoke("GetFullDistrictInfo", new object[] {
                        idlonlats});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFullDistrictInfoAsync(string[] idlonlats) {
            this.GetFullDistrictInfoAsync(idlonlats, null);
        }
        
        /// <remarks/>
        public void GetFullDistrictInfoAsync(string[] idlonlats, object userState) {
            if ((this.GetFullDistrictInfoOperationCompleted == null)) {
                this.GetFullDistrictInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFullDistrictInfoOperationCompleted);
            }
            this.InvokeAsync("GetFullDistrictInfo", new object[] {
                        idlonlats}, this.GetFullDistrictInfoOperationCompleted, userState);
        }
        
        private void OnGetFullDistrictInfoOperationCompleted(object arg) {
            if ((this.GetFullDistrictInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFullDistrictInfoCompleted(this, new GetFullDistrictInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRegionNames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetRegionNames(string regionID) {
            object[] results = this.Invoke("GetRegionNames", new object[] {
                        regionID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRegionNamesAsync(string regionID) {
            this.GetRegionNamesAsync(regionID, null);
        }
        
        /// <remarks/>
        public void GetRegionNamesAsync(string regionID, object userState) {
            if ((this.GetRegionNamesOperationCompleted == null)) {
                this.GetRegionNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegionNamesOperationCompleted);
            }
            this.InvokeAsync("GetRegionNames", new object[] {
                        regionID}, this.GetRegionNamesOperationCompleted, userState);
        }
        
        private void OnGetRegionNamesOperationCompleted(object arg) {
            if ((this.GetRegionNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegionNamesCompleted(this, new GetRegionNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoadName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRoadName(double lon, double lat) {
            object[] results = this.Invoke("GetRoadName", new object[] {
                        lon,
                        lat});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoadNameAsync(double lon, double lat) {
            this.GetRoadNameAsync(lon, lat, null);
        }
        
        /// <remarks/>
        public void GetRoadNameAsync(double lon, double lat, object userState) {
            if ((this.GetRoadNameOperationCompleted == null)) {
                this.GetRoadNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoadNameOperationCompleted);
            }
            this.InvokeAsync("GetRoadName", new object[] {
                        lon,
                        lat}, this.GetRoadNameOperationCompleted, userState);
        }
        
        private void OnGetRoadNameOperationCompleted(object arg) {
            if ((this.GetRoadNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoadNameCompleted(this, new GetRoadNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoadNames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetRoadNames(string[] idlonlats) {
            object[] results = this.Invoke("GetRoadNames", new object[] {
                        idlonlats});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRoadNamesAsync(string[] idlonlats) {
            this.GetRoadNamesAsync(idlonlats, null);
        }
        
        /// <remarks/>
        public void GetRoadNamesAsync(string[] idlonlats, object userState) {
            if ((this.GetRoadNamesOperationCompleted == null)) {
                this.GetRoadNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoadNamesOperationCompleted);
            }
            this.InvokeAsync("GetRoadNames", new object[] {
                        idlonlats}, this.GetRoadNamesOperationCompleted, userState);
        }
        
        private void OnGetRoadNamesOperationCompleted(object arg) {
            if ((this.GetRoadNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoadNamesCompleted(this, new GetRoadNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoadRank", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRoadRank(double lon, double lat) {
            object[] results = this.Invoke("GetRoadRank", new object[] {
                        lon,
                        lat});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoadRankAsync(double lon, double lat) {
            this.GetRoadRankAsync(lon, lat, null);
        }
        
        /// <remarks/>
        public void GetRoadRankAsync(double lon, double lat, object userState) {
            if ((this.GetRoadRankOperationCompleted == null)) {
                this.GetRoadRankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoadRankOperationCompleted);
            }
            this.InvokeAsync("GetRoadRank", new object[] {
                        lon,
                        lat}, this.GetRoadRankOperationCompleted, userState);
        }
        
        private void OnGetRoadRankOperationCompleted(object arg) {
            if ((this.GetRoadRankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoadRankCompleted(this, new GetRoadRankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWeatherId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWeatherId(double x, double y) {
            object[] results = this.Invoke("GetWeatherId", new object[] {
                        x,
                        y});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWeatherIdAsync(double x, double y) {
            this.GetWeatherIdAsync(x, y, null);
        }
        
        /// <remarks/>
        public void GetWeatherIdAsync(double x, double y, object userState) {
            if ((this.GetWeatherIdOperationCompleted == null)) {
                this.GetWeatherIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWeatherIdOperationCompleted);
            }
            this.InvokeAsync("GetWeatherId", new object[] {
                        x,
                        y}, this.GetWeatherIdOperationCompleted, userState);
        }
        
        private void OnGetWeatherIdOperationCompleted(object arg) {
            if ((this.GetWeatherIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWeatherIdCompleted(this, new GetWeatherIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InitialStaticCache", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InitialStaticCache() {
            object[] results = this.Invoke("InitialStaticCache", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InitialStaticCacheAsync() {
            this.InitialStaticCacheAsync(null);
        }
        
        /// <remarks/>
        public void InitialStaticCacheAsync(object userState) {
            if ((this.InitialStaticCacheOperationCompleted == null)) {
                this.InitialStaticCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitialStaticCacheOperationCompleted);
            }
            this.InvokeAsync("InitialStaticCache", new object[0], this.InitialStaticCacheOperationCompleted, userState);
        }
        
        private void OnInitialStaticCacheOperationCompleted(object arg) {
            if ((this.InitialStaticCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitialStaticCacheCompleted(this, new InitialStaticCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsInRegion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsInRegion(double lon, double lat, string regionID) {
            object[] results = this.Invoke("IsInRegion", new object[] {
                        lon,
                        lat,
                        regionID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsInRegionAsync(double lon, double lat, string regionID) {
            this.IsInRegionAsync(lon, lat, regionID, null);
        }
        
        /// <remarks/>
        public void IsInRegionAsync(double lon, double lat, string regionID, object userState) {
            if ((this.IsInRegionOperationCompleted == null)) {
                this.IsInRegionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsInRegionOperationCompleted);
            }
            this.InvokeAsync("IsInRegion", new object[] {
                        lon,
                        lat,
                        regionID}, this.IsInRegionOperationCompleted, userState);
        }
        
        private void OnIsInRegionOperationCompleted(object arg) {
            if ((this.IsInRegionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsInRegionCompleted(this, new IsInRegionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsInRegions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] IsInRegions(string[] paramStr) {
            object[] results = this.Invoke("IsInRegions", new object[] {
                        paramStr});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void IsInRegionsAsync(string[] paramStr) {
            this.IsInRegionsAsync(paramStr, null);
        }
        
        /// <remarks/>
        public void IsInRegionsAsync(string[] paramStr, object userState) {
            if ((this.IsInRegionsOperationCompleted == null)) {
                this.IsInRegionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsInRegionsOperationCompleted);
            }
            this.InvokeAsync("IsInRegions", new object[] {
                        paramStr}, this.IsInRegionsOperationCompleted, userState);
        }
        
        private void OnIsInRegionsOperationCompleted(object arg) {
            if ((this.IsInRegionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsInRegionsCompleted(this, new IsInRegionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryAllLayerByAttr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryAllLayerByAttr(string pName, string cName, string queryVal) {
            object[] results = this.Invoke("QueryAllLayerByAttr", new object[] {
                        pName,
                        cName,
                        queryVal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAllLayerByAttrAsync(string pName, string cName, string queryVal) {
            this.QueryAllLayerByAttrAsync(pName, cName, queryVal, null);
        }
        
        /// <remarks/>
        public void QueryAllLayerByAttrAsync(string pName, string cName, string queryVal, object userState) {
            if ((this.QueryAllLayerByAttrOperationCompleted == null)) {
                this.QueryAllLayerByAttrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAllLayerByAttrOperationCompleted);
            }
            this.InvokeAsync("QueryAllLayerByAttr", new object[] {
                        pName,
                        cName,
                        queryVal}, this.QueryAllLayerByAttrOperationCompleted, userState);
        }
        
        private void OnQueryAllLayerByAttrOperationCompleted(object arg) {
            if ((this.QueryAllLayerByAttrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAllLayerByAttrCompleted(this, new QueryAllLayerByAttrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryAllLayerByLngLatAttr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryAllLayerByLngLatAttr(double lng, double lat, string queryVal) {
            object[] results = this.Invoke("QueryAllLayerByLngLatAttr", new object[] {
                        lng,
                        lat,
                        queryVal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAllLayerByLngLatAttrAsync(double lng, double lat, string queryVal) {
            this.QueryAllLayerByLngLatAttrAsync(lng, lat, queryVal, null);
        }
        
        /// <remarks/>
        public void QueryAllLayerByLngLatAttrAsync(double lng, double lat, string queryVal, object userState) {
            if ((this.QueryAllLayerByLngLatAttrOperationCompleted == null)) {
                this.QueryAllLayerByLngLatAttrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAllLayerByLngLatAttrOperationCompleted);
            }
            this.InvokeAsync("QueryAllLayerByLngLatAttr", new object[] {
                        lng,
                        lat,
                        queryVal}, this.QueryAllLayerByLngLatAttrOperationCompleted, userState);
        }
        
        private void OnQueryAllLayerByLngLatAttrOperationCompleted(object arg) {
            if ((this.QueryAllLayerByLngLatAttrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAllLayerByLngLatAttrCompleted(this, new QueryAllLayerByLngLatAttrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryAllLayerByPoint", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryAllLayerByPoint(double x, double y) {
            object[] results = this.Invoke("QueryAllLayerByPoint", new object[] {
                        x,
                        y});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAllLayerByPointAsync(double x, double y) {
            this.QueryAllLayerByPointAsync(x, y, null);
        }
        
        /// <remarks/>
        public void QueryAllLayerByPointAsync(double x, double y, object userState) {
            if ((this.QueryAllLayerByPointOperationCompleted == null)) {
                this.QueryAllLayerByPointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAllLayerByPointOperationCompleted);
            }
            this.InvokeAsync("QueryAllLayerByPoint", new object[] {
                        x,
                        y}, this.QueryAllLayerByPointOperationCompleted, userState);
        }
        
        private void OnQueryAllLayerByPointOperationCompleted(object arg) {
            if ((this.QueryAllLayerByPointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAllLayerByPointCompleted(this, new QueryAllLayerByPointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RouteAnaly", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RouteAnaly(double sX, double sY, double eX, double eY) {
            object[] results = this.Invoke("RouteAnaly", new object[] {
                        sX,
                        sY,
                        eX,
                        eY});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RouteAnalyAsync(double sX, double sY, double eX, double eY) {
            this.RouteAnalyAsync(sX, sY, eX, eY, null);
        }
        
        /// <remarks/>
        public void RouteAnalyAsync(double sX, double sY, double eX, double eY, object userState) {
            if ((this.RouteAnalyOperationCompleted == null)) {
                this.RouteAnalyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRouteAnalyOperationCompleted);
            }
            this.InvokeAsync("RouteAnaly", new object[] {
                        sX,
                        sY,
                        eX,
                        eY}, this.RouteAnalyOperationCompleted, userState);
        }
        
        private void OnRouteAnalyOperationCompleted(object arg) {
            if ((this.RouteAnalyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RouteAnalyCompleted(this, new RouteAnalyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/T_CacheInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string T_CacheInfo() {
            object[] results = this.Invoke("T_CacheInfo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void T_CacheInfoAsync() {
            this.T_CacheInfoAsync(null);
        }
        
        /// <remarks/>
        public void T_CacheInfoAsync(object userState) {
            if ((this.T_CacheInfoOperationCompleted == null)) {
                this.T_CacheInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnT_CacheInfoOperationCompleted);
            }
            this.InvokeAsync("T_CacheInfo", new object[0], this.T_CacheInfoOperationCompleted, userState);
        }
        
        private void OnT_CacheInfoOperationCompleted(object arg) {
            if ((this.T_CacheInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.T_CacheInfoCompleted(this, new T_CacheInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/T_ExportQueryIP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool T_ExportQueryIP() {
            object[] results = this.Invoke("T_ExportQueryIP", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void T_ExportQueryIPAsync() {
            this.T_ExportQueryIPAsync(null);
        }
        
        /// <remarks/>
        public void T_ExportQueryIPAsync(object userState) {
            if ((this.T_ExportQueryIPOperationCompleted == null)) {
                this.T_ExportQueryIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnT_ExportQueryIPOperationCompleted);
            }
            this.InvokeAsync("T_ExportQueryIP", new object[0], this.T_ExportQueryIPOperationCompleted, userState);
        }
        
        private void OnT_ExportQueryIPOperationCompleted(object arg) {
            if ((this.T_ExportQueryIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.T_ExportQueryIPCompleted(this, new T_ExportQueryIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/T_GetQueryCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string T_GetQueryCount() {
            object[] results = this.Invoke("T_GetQueryCount", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void T_GetQueryCountAsync() {
            this.T_GetQueryCountAsync(null);
        }
        
        /// <remarks/>
        public void T_GetQueryCountAsync(object userState) {
            if ((this.T_GetQueryCountOperationCompleted == null)) {
                this.T_GetQueryCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnT_GetQueryCountOperationCompleted);
            }
            this.InvokeAsync("T_GetQueryCount", new object[0], this.T_GetQueryCountOperationCompleted, userState);
        }
        
        private void OnT_GetQueryCountOperationCompleted(object arg) {
            if ((this.T_GetQueryCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.T_GetQueryCountCompleted(this, new T_GetQueryCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CacheGeoCodeAddressCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreatCatelliteTileCompletedEventHandler(object sender, CreatCatelliteTileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatCatelliteTileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatCatelliteTileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreatCwtTileCompletedEventHandler(object sender, CreatCwtTileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatCwtTileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatCwtTileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateMapImgFileCompletedEventHandler(object sender, CreateMapImgFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateMapImgFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateMapImgFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreatGoogleTileCompletedEventHandler(object sender, CreatGoogleTileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatGoogleTileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatGoogleTileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ExportTrackLineCompletedEventHandler(object sender, ExportTrackLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportTrackLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportTrackLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAlarmStateCompletedEventHandler(object sender, GetAlarmStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlarmStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlarmStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAlarmStatusCompletedEventHandler(object sender, GetAlarmStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlarmStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlarmStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strOutXml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllMapNamesCompletedEventHandler(object sender, GetAllMapNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMapNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMapNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCityDistrictInfoCompletedEventHandler(object sender, GetCityDistrictInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCityDistrictInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCityDistrictInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDistrictInfoCompletedEventHandler(object sender, GetDistrictInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistrictInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistrictInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDistrictInfoByXYCompletedEventHandler(object sender, GetDistrictInfoByXYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistrictInfoByXYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistrictInfoByXYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFullDistrictInfoCompletedEventHandler(object sender, GetFullDistrictInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFullDistrictInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFullDistrictInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRegionNamesCompletedEventHandler(object sender, GetRegionNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegionNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegionNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRoadNameCompletedEventHandler(object sender, GetRoadNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoadNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoadNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRoadNamesCompletedEventHandler(object sender, GetRoadNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoadNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoadNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRoadRankCompletedEventHandler(object sender, GetRoadRankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoadRankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoadRankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetWeatherIdCompletedEventHandler(object sender, GetWeatherIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWeatherIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWeatherIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InitialStaticCacheCompletedEventHandler(object sender, InitialStaticCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitialStaticCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitialStaticCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsInRegionCompletedEventHandler(object sender, IsInRegionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsInRegionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsInRegionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsInRegionsCompletedEventHandler(object sender, IsInRegionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsInRegionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsInRegionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryAllLayerByAttrCompletedEventHandler(object sender, QueryAllLayerByAttrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAllLayerByAttrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAllLayerByAttrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryAllLayerByLngLatAttrCompletedEventHandler(object sender, QueryAllLayerByLngLatAttrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAllLayerByLngLatAttrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAllLayerByLngLatAttrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryAllLayerByPointCompletedEventHandler(object sender, QueryAllLayerByPointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAllLayerByPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAllLayerByPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RouteAnalyCompletedEventHandler(object sender, RouteAnalyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RouteAnalyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RouteAnalyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void T_CacheInfoCompletedEventHandler(object sender, T_CacheInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class T_CacheInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal T_CacheInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void T_ExportQueryIPCompletedEventHandler(object sender, T_ExportQueryIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class T_ExportQueryIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal T_ExportQueryIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void T_GetQueryCountCompletedEventHandler(object sender, T_GetQueryCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class T_GetQueryCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal T_GetQueryCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591