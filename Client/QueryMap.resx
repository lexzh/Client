<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnMove.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAHJJREFUOE+lkwEO
        gCAMA/n/p1GII2WUUuISI3Hsuk4oRUd90+2xAwtqxAc5wpYCBCQY7egWQK1NENFBT7H5WABmhw5v0GDR
        VDNg650B8FtYmPahggJk/yexJS8H6NB+AdTxdsT9I737jc7NChX2dur9PQ847PUZSU/LmAAAAABJRU5E
        rkJggg==
</value>
  </data>
  <data name="btnZoomIn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAZFJREFUOE+NU6ty
        wzAQVP7EfxD/QQzLZNYymSVMZg2Ti+ogq6ysgoEHCwULBQ0FyyrWsOudm1dtZ6Y7c+PRSLur25MX4gjz
        3GViIUpaFkIsCvH9JZIQntZeHAS87J7i6ezkS+TCtB0QMPQRU0pDhT6g2wPqrQGtNQnPgJ2Z7L3HCQ6I
        iQrAIwmAWuts6t52NTtfo7EOuZgcE9UnoqW12qh6TgD42mOBunVncqBtR7dQSsFUwFhql2wIJ2cm143F
        qrZYbhr0fUL4iCxAuY5gjDkL/BIdVtsLuaxIIJCAjygfZgS0MRBCQDwGxj2z60Ak54FMZfeeBOS0BRpR
        zaO6DozJZ+ejALeklGwmLehHk/GIHE2C0+bArp3ZnbOR99LbtsK3neLH9hf8SNRGA4+K0+bAuGe+NjtL
        KSH4BlPvEF5viKi1yijlmkfFYVG/XCDlyrsmx/heYIp2qJsicy9VyWVZlTlCexGJwaKzFd78N8YbJxHX
        Fgg2x7LIsTNy/t+4pTqI3GVY5DnK1XIa5L+vMzr4Aw4ZqneWBqe3AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnZoonOut.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAYlJREFUOE+Nk6FS
        xDAQhnNv0jegb3CVuNSBS92dax24FEVRFxyOyJMrkZHIyJOROOLA/eweHNxd2xl2ZqeTaf9vd/9NF+on
        7P2mUAtV87FSalGpj3eVlQp8DupT0ePDXTp8O3qyuLLDhjgQdwk5533GXYTfEtpbS23bMngipLKIQwgY
        xSeQOYkCGEBm1Rbj6sOmk8pz4pSB9AY452HWppsCkLR9Ej+VD+LIrz13YYyhMcA6HpfLcPRcRbIbOHuH
        pnOo1z3CLoNekwDY17Ow1v4CvoUeze2fuG4YEBkQEvT1BKC1lmKMwETbUnkv5nTbwAA9HoFX1MmqxO3j
        mY/FApCRjNH9aIT2xhayIs+bELfFsHOx+KKvdHBDg+cHI5ftNOSSmHVLsipxWwyTmaVtqay1phh65J0H
        Pc1AzMoU7HInqxKzeF5J0noZfF8ivVTIye1zFjJ1U42+qJu6BA1/kBQdvGsw+2+cvzhA/FCBXIm6KrGx
        evrfmKPuIZcFqrKEXl6Mjfx3O2cffgEkbLWEF3e3JQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="picLoadMap.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAAhAKcDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD1HSNMtruytwLSxBW2iZmktg5YkHPOR6Vo/wDCPW//AD76d/4B
        D/4qq/hWTzLQcH5beFefo1MuDea7e3dpbXkQ0wxeWzxn5lb+ZyeP7pXPOa6K1ScZtJmNOEXFOxb/AOEe
        t/8An307/wAAh/8AFUf8I9b/APPvp3/gEP8A4qstbm88NarZWl9qEA0cxeVG8p+dn/mME45+ULjJzWlr
        U2qw39lFZatp1ml2/kRR3WnSXDPKEeQ4ZZkAGxCeR/CeeQKz9tPuX7OPYd/wj1v/AM++nf8AgEP/AIqj
        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
</value>
  </data>
</root>